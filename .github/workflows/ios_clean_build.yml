name: iOS Clean Build (No Cache)

on:
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  clean-build-ios-v1-1-36:
    runs-on: macos-latest
    
    steps:
    - name: Clean Runner Environment
      run: |
        echo "=== CLEANING RUNNER ENVIRONMENT ==="
        # Clean only directories we can access without sudo
        rm -rf ~/.pub-cache/ || echo "pub-cache not found or no permission"
        rm -rf ~/Library/Developer/Xcode/DerivedData/ || echo "Xcode DerivedData not found or no permission"
        rm -rf /tmp/flutter_* || echo "No flutter temp files found"
        # Clean specific cache directories we can access
        rm -rf ~/Library/Caches/flutter* || echo "No flutter caches found"
        rm -rf ~/Library/Caches/CocoaPods/ || echo "No CocoaPods caches found"
        rm -rf ~/Library/Caches/org.carthage.CarthageKit/ || echo "No Carthage caches found"
        echo "Environment cleaned (accessible directories only)"
    
    - name: Checkout Fresh Code
      uses: actions/checkout@v4
      with:
        clean: true
        fetch-depth: 0
        persist-credentials: false
    
    - name: Verify Fresh Checkout
      run: |
        echo "=== VERIFYING v1.1.36 CLEAN BUILD FRESH CHECKOUT ==="
        echo "Git commit:"
        git log -1 --oneline
        echo ""
        echo "Version in pubspec.yaml:"
        grep "^version:" pubspec.yaml
        echo ""
        echo "BuildInfo version:"
        grep "static const String version" lib/utils/build_info.dart || echo "BuildInfo.dart not found"
        echo ""
        echo "Build identifier:"
        grep "BUILD_1_1_36_FLUTTER_SDK_FIX" lib/utils/build_info.dart || echo "Build identifier not found"
        echo ""
        echo "Constants.dart endpoints (MUST be ios- prefixed):"
        grep -E "checkPhoneUrl|getVideoTokenUrl" lib/utils/constants.dart
        echo ""
        echo "File checksums for verification:"
        shasum lib/utils/constants.dart
        shasum lib/providers/auth_provider.dart
        echo "=== END VERIFICATION ==="
    
    - name: Install Flutter from Scratch
      run: |
        echo "=== INSTALLING FLUTTER FROM SCRATCH ==="
        # Download specific Flutter version directly (no cache)
        git clone https://github.com/flutter/flutter.git flutter_sdk
        cd flutter_sdk
        git checkout 3.24.0  # Use specific version to match dependencies
        cd ..
        export PATH="$PWD/flutter_sdk/bin:$PATH"
        
        # Verify Flutter installation
        flutter --version
        flutter doctor -v
        
        echo "Flutter 3.24.0 installed fresh"
    
    - name: Clean Project Completely
      run: |
        export PATH="$PWD/flutter_sdk/bin:$PATH"
        echo "=== CLEANING PROJECT ==="
        flutter clean
        rm -rf build/
        rm -rf .dart_tool/
        rm -rf .packages
        rm -rf pubspec.lock
        rm -rf ios/Pods/
        rm -rf ios/Podfile.lock
        rm -rf ios/.symlinks/
        rm -rf ios/Flutter/Flutter.framework
        rm -rf ios/Flutter/Flutter.podspec
        echo "Project cleaned"
    
    - name: Get Dependencies Fresh
      run: |
        export PATH="$PWD/flutter_sdk/bin:$PATH"
        echo "=== GETTING DEPENDENCIES ==="
        flutter pub get
        echo "Dependencies fetched"
    
    - name: Generate Code
      run: |
        export PATH="$PWD/flutter_sdk/bin:$PATH"
        echo "=== GENERATING CODE ==="
        flutter packages pub run build_runner build --delete-conflicting-outputs
        
        # Verify generated files
        if [ ! -f lib/models/yoga_message.g.dart ]; then
          echo "ERROR: yoga_message.g.dart not generated"
          exit 1
        fi
        echo "Code generation complete"
    
    - name: Install iOS Dependencies
      run: |
        export PATH="$PWD/flutter_sdk/bin:$PATH"
        echo "=== INSTALLING iOS DEPENDENCIES ==="
        cd ios
        pod cache clean --all
        pod deintegrate
        pod install --repo-update
        cd ..
        echo "iOS dependencies installed"
    
    - name: Final Pre-Build Verification
      run: |
        echo "=== FINAL PRE-BUILD CHECK ==="
        echo "Confirming iOS endpoints in constants.dart:"
        grep "ios-get-video-token.php" lib/utils/constants.dart || (echo "ERROR: iOS endpoint not found!" && exit 1)
        echo "Confirming BuildInfo v1.1.35:"
        grep "v1.1.35" lib/utils/build_info.dart || (echo "ERROR: BuildInfo not v1.1.35!" && exit 1)
        echo "=== READY TO BUILD ==="
    
    - name: Build iOS App
      run: |
        export PATH="$PWD/flutter_sdk/bin:$PATH"
        echo "=== BUILDING iOS v1.1.35 ==="
        flutter build ios --release --no-codesign --verbose
        echo "Build complete"
    
    - name: Verify Build Output
      run: |
        echo "=== VERIFYING BUILD OUTPUT ==="
        # Check if Runner.app exists
        if [ -d "build/ios/iphoneos/Runner.app" ]; then
          echo "✅ Runner.app created successfully"
          echo "App size:"
          du -sh build/ios/iphoneos/Runner.app
          
          # Check for our custom files in the app
          echo ""
          echo "Checking for BuildInfo in app:"
          grep -r "BUILD_1_1_35" build/ios/iphoneos/Runner.app || echo "Build identifier not found in app"
          
        else
          echo "❌ Runner.app not found!"
          exit 1
        fi
    
    - name: Create IPA
      run: |
        echo "=== CREATING IPA ==="
        cd build/ios/iphoneos
        mkdir -p Payload
        cp -r Runner.app Payload/
        zip -r YogaChallenge_v1.1.36_clean.ipa Payload
        echo "✅ CLEAN BUILD IPA created: YogaChallenge_v1.1.36_clean.ipa"
        ls -la *.ipa
    
    - name: Upload IPA Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-clean-build-v1-1-36
        path: build/ios/iphoneos/YogaChallenge_v1.1.36_clean.ipa
        retention-days: 30
    
    - name: Upload Build Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-v1-1-36
        path: |
          build/ios/iphoneos/Runner.app/Info.plist
          flutter_build.log
        retention-days: 7